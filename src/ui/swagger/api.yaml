openapi: 3.0.0
info:
  description: >-
    This is the RESTful API documentation of the microservice for HANIoT platform user account.
  version: 1.0.0
  title: HANIoT Account Service
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/haniot/haniot-account-service/1.0.0
  - description: localhost http
    url: 'http://localhost'
tags:
  - name: auth
    description: Operations for the user authentication in plataform.
  - name: users
    description: Operations for the User resource.
  - name: users.admins
    description: Operations for the User Admin resource.
  - name: users.healthprofessionals
    description: Operations for the User HealthProfessional resource.
  - name: users.healthprofessionals.pilotstudies
    description: Operations for the User HealthProfessional Pilot Studies resource.
  - name: users.patients
    description: Operations for the User Patient resource.
  - name: pilotstudies
    description: Operations for the Pilot Study resource.
  - name: pilotstudies.healthprofessionals
    description: Operations for the Health Professionals associated with a Pilot Study.
paths:
  #auth
  /auth:
    post:
      tags:
        - auth
      summary: Authenticate user.
      description: |
        Authenticate a user. User authentication is performed using JWT token generation. In generating the JWT token, there are following types of attributes:

        **Reserved Claims**: Non-mandatory (but recommended) attributes used in token validation by API security protocols. These are used to create a pattern and are defined in RFC-7519.
        * sub (subject) - Entity that the token belongs to, usually the user ID;
        * iss (emitter) - sets the emitter of the token;
        * exp (expiration) - Timestamp of when the token will expire;
        * iat (issued at) - Timestamp from when the token was created.

        **Public claims**: Attributes that are not part of the pattern, and are defined especially for sharing information between applications.

        * scopes - A developer-defined attribute that specifies token access scopes.

        Example of values that can compose the payload.:


        ```json
        {
          "sub": "5accb6215ba48413e81e7853e",
          "iss": "haniot",
          "exp": 1534020202,
          "iat": 1534009474,
          "scopes": "users:readAll users:register users:read users:update users:remove"
        }

      operationId: authUser
      responses:
        '200':
          description: User successfully authenticated.
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1YWNjYjYyMTViYTQ4NDEzZTgxZTc4NTNlIiwiaXNzIjoiaGFuaW90IiwiZXhwIjoxNTM0MDIwMjAyLCJpYXQiOjE1MzQwMDk0NzQsInNjb3BlcyI6InVzZXJzOnJlYWRBbGwgdXNlcnM6cmVnaXN0ZXIgdXNlcnM6cmVhZCB1c2Vyczp1cGRhdGUgdXNlcnM6cmVtb3ZlIn0.vkan_NyX-PwPwlACkg7PqqTKUEbnBOSBSu_aq3gUZRM

        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          description: >-
            User password must be changed. It occours when the system requires that user change your password during the auth proccess.
          content:
            application/json:
              schema:
                example:
                  code: 403
                  message: Change password is necessary.
                  description: "To ensure information security, the user must change the access password. Access /users/{user_id}/password to update then."
                  redirect_link: /users/{user_id}/password
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: loremipsum@mail.com
                password: loremipsum123
        description: Data of the user to perform authentication.
        required: true

  # users
  /users/{user_id}:
    delete:
      security:
        - JWTAuth: []
      tags:
        - users
      summary: Delete user data.
      description: Delete the user data.
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          example: '5c86d00c7a8618923481b48b'
          schema:
            type: string
      responses:
        '204':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/204'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
  /users/{user_id}/password:
    patch:
      tags:
        - users
      summary: Change user password.
      description: Change the user password.
      operationId: changePassword
      parameters:
        - name: user_id
          in: path
          required: true
          description: Id of user.
          example: 5c86d00c7a8618923481b48b
          schema:
            type: string
      responses:
        '204':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/204'
        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  example: 'lorem123'
                new_password:
                  type: string
                  example: 'loremipsum123'
        description: Old and new user passwords.
        required: true

  # users.admins
  /users/admins:
    post:
      security:
        - JWTAuth: []
      tags:
        - users.admins
      summary: Register admin user.
      description: Register a new user as admin.
      operationId: addAdminUser
      responses:
        '201':
          description: Admin successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@haniot.com
                password:
                  type: string
                  example: 'admin*123'
        description: Data of the user to be saved.
        required: true
    get:
      security:
        - JWTAuth: []
      tags:
        - users.admins
      summary: Recover admins.
      description: >-
        Returns list with all admins. The query supports Field Selection, Paging,
        Sorting, and Filtering.
      operationId: getAllAdmins
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/pageParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/limitParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/sortParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/filterParam'
      responses:
        '200':
          description: List of admins.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
  /users/admins/{admin_id}:
    get:
      security:
        - JWTAuth: []
      tags:
        - users.admins
      summary: Recover admin data.
      description: Recover the admin data. The query suports Fields param.
      operationId: getAdminById
      parameters:
        - name: admin_id
          in: path
          required: true
          description: Id of admin.
          example: '5c86d00c7a8618923481b48b'
          schema:
            type: string
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
    patch:
      security:
        - JWTAuth: []
      tags:
        - users.admins
      summary: Update admin data.
      description: Update the admin data.
      operationId: updateAdminById
      parameters:
        - name: admin_id
          in: path
          required: true
          description: Id of admin.
          example: '5c86d00c7a8618923481b48b'
          schema:
            type: string
      responses:
        '200':
          description: Updated admin data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '409':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/409'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
        description: Data of the admin to be updated.
        required: true

  # users.healthprofessionals
  /users/healthprofessionals:
    post:
      security:
        - JWTAuth: []
      tags:
        - users.healthprofessionals
      summary: Register health professional user.
      description: Register a new user as health professional.
      operationId: addHealthprofessionalUser
      responses:
        '201':
          description: Health professional successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProfessional'
        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Isabelle Cordeiro
                email:
                  type: string
                  example: isa@haniot.com
                password:
                  type: string
                  example: isa#uepb
                health_area:
                  type: string
                  example: 'nutrition'
        description: Data of the health professional to be saved.
        required: true
    get:
      security:
        - JWTAuth: []
      tags:
        - users.healthprofessionals
      summary: Recover health professionals.
      description: >-
        Returns list with all health professionals. The query supports Field Selection, Paging,
        Sorting, and Filtering.
      operationId: getAllHealthProfessionals
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/pageParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/limitParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/sortParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/filterParam'
      responses:
        '200':
          description: List of health professionals.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthProfessional'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
  /users/healthprofessionals/{healthprofessional_id}:
    get:
      security:
        - JWTAuth: []
      tags:
        - users.healthprofessionals
      summary: Recover health professional data.
      description: Recover the health professional data. The query suports Fields param.
      operationId: getHealthProfessionalById
      parameters:
        - name: healthprofessional_id
          in: path
          required: true
          description: Id of health professional.
          example: '5c86d00cfc25e7036d51d652'
          schema:
            type: string
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProfessional'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
    patch:
      security:
        - JWTAuth: []
      tags:
        - users.healthprofessionals
      summary: Update health professional data.
      description: Update the health professional data.
      operationId: updateHealthProfessionalById
      parameters:
        - name: healthprofessional_id
          in: path
          required: true
          description: Id of health professional.
          example: '5c86d00cfc25e7036d51d652'
          schema:
            type: string
      responses:
        '200':
          description: Updated health professional data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProfessional'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '409':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/409'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthProfessional'
        description: Data of the health professional to be updated.
        required: true

  # users.healthprofessionals.pilotstudies
  /users/healthprofessionals/{healthprofessional_id}/pilotstudies:
    get:
      security:
        - JWTAuth: []
      tags:
        -  users.healthprofessionals.pilotstudies
      summary: Recover all pilot studies from health professional.
      description: >-
        Returns list with pilot studies that health professional is associated. The query supports Field Selection, Paging,
        Sorting, and Filtering.
      operationId: getAllPilotStudiesFromHealthProfessional
      parameters:
        - name: healthprofessional_id
          in: path
          required: true
          description: Id of health professional.
          example: '5c86d00cfc25e7036d51d652'
          schema:
            type: string
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/pageParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/limitParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/sortParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/filterParam'
      responses:
        '200':
          description: List of pilot studies.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      readOnly: true
                      type: string
                      format: uuid
                      description: Automatically generated key field.
                      example: '5c86d00c2239a48ea20a0134'
                    name:
                      type: string
                      description: Name of pilot study.
                      example: 'Pilot Odonto 01'
                    is_active:
                      type: boolean
                      description: Status of pilot study. The value is true if it is active, false otherwise.
                      example: true
                    start:
                      type: string
                      description: Start of pilot study in UTC format, according to ISO 8601.
                      example: '2018-11-19T14:40:00'
                    end:
                      type: string
                      description: End of pilot study in UTC format, according to ISO 8601.
                      example: '2019-01-23T18:00:00'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'

    # users.patients
  /users/patients:
    post:
      tags:
        - users.patients
      summary: Register patient user.
      description: Register a new user as patient.
      operationId: addPatient
      responses:
        '201':
          description: Patient successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        description: Data of the patient to be saved.
        required: true
    get:
      tags:
        - users.patients
      summary: Recover patients.
      description: |
        Returns list with all patients. The query supports Field Selection, Paging, Sorting, and Filtering.

        This API supports filters in the query. Although Swagger does not support query filters, you can get information about filter queries by visiting this [link](https://github.com/nutes-uepb/query-strings-parser/wiki/3.4-Filtering).
      operationId: getAllPatients
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/pageParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/limitParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/sortParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/filterParam'
      responses:
        '200':
          description: List of patients.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
  /users/patients/{patient_id}:
    get:
      tags:
        - users.patients
      summary: Recover patient data.
      description: Recover the patient data. The query suports Fields param.
      operationId: getPatientById
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Id of patient.
          example: '5c9137f2b8d3921ff3028378'
          schema:
            type: string
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested patient data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
    patch:
      tags:
        - users.patients
      summary: Update patient data.
      description: Update the patient data.
      operationId: updatePatient
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Id of patient.
          example: '5c9137f2b8d3921ff3028378'
          schema:
            type: string
      responses:
        '200':
          description: Updated patient data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '409':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/409'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        description: Data of the patient to be updated.
        required: true


  # pilotstudies
  /pilotstudies:
    post:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies
      summary: Register pilot study.
      description: Register a new pilot study.
      operationId: addPilotStudy
      responses:
        '201':
          description: Pilot study successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PilotStudy'
        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PilotStudy'
        description: Data of the pilot study to be saved.
        required: true
    get:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies
      summary: Recover all pilot studies.
      description: >-
        Returns list with pilot studies. The query supports Field Selection, Paging,
        Sorting, and Filtering.
      operationId: getAllPilotStudies
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/pageParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/limitParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/sortParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/filterParam'
      responses:
        '200':
          description: List of pilot studies.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PilotStudy'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
  /pilotstudies/{pilotstudy_id}:
    get:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies
      summary: Recover pilot sudy data.
      description: Recover the pilot study data. The query supports Field Selection.
      operationId: getPilotStudyById
      parameters:
        - name: pilotstudy_id
          in: path
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PilotStudy'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
    patch:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies
      summary: Update pilot sudy data.
      description: Update the pilot study data.
      operationId: updatePilotStudy
      parameters:
        - in: path
          name: pilotstudy_id
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
      responses:
        '200':
          description: Updated pilot study data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PilotStudy'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '409':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/409'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PilotStudy'
        description: Pilot Study data to be updated.
        required: true
    delete:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies
      summary: Delete pilot sudy data.
      description: Delete the pilot study data.
      operationId: deletePilotStudy
      parameters:
        - in: path
          name: pilotstudy_id
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
      responses:
        '204':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/204'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'

  # pilotstudies.healthprofessionals
  /pilotstudies/{pilotstudy_id}/healthprofessionals:
    get:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies.healthprofessionals
      summary: Recover all health professionals from pilot study.
      description: >-
        Returns list with all health professionals from pilot study. The query supports Field Selection, Paging,
        Sorting, and Filtering.
      operationId: getAllHealthprofessionalsFromPilotStudy
      parameters:
        - name: pilotstudy_id
          in: path
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/fieldsParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/pageParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/limitParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/sortParam'
        - $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/parameters/filterParam'
      responses:
        '200':
          description: List of pilot studies.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthProfessional'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
  /pilotstudies/{pilotstudy_id}/healthprofessionals/{healthprofessional_id}:
    post:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies.healthprofessionals
      summary: Associate health professionals with pilot study.
      description: Associate a health professionals with a pilot study by id.
      operationId: associateHealthprofessionalToPilotStudy
      parameters:
        - name: pilotstudy_id
          in: path
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
        - name: healthprofessional_id
          in: path
          required: true
          description: Id of health professional.
          example: '5c86d00cfc25e7036d51d652'
          schema:
            type: string
      responses:
        '201':
          description: Health professional successfully associated.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthProfessional'
        '400':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/400'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '415':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/415'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'
    delete:
      security:
        - JWTAuth: []
      tags:
        - pilotstudies.healthprofessionals
      summary: Disassociate health professionals from pilot study.
      description: Disassociate a health professionals from a pilot study by id.
      operationId: disassociateHealthprofessionalFromPilotStudy
      parameters:
        - name: pilotstudy_id
          in: path
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
        - name: healthprofessional_id
          in: path
          required: true
          description: Id of health professional.
          example: '5c86d00cfc25e7036d51d652'
          schema:
            type: string
      responses:
        '204':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/204'
        '401':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/401'
        '403':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/403'
        '404':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/404'
        '406':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/406'
        '429':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/429'
        '500':
          $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/responses/500'

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Admin:
      $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Admin'
    HealthProfessional:
      $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/HealthProfessional'
    Patient:
      $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Patient'
    PilotStudy:
      $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/PilotStudy'
